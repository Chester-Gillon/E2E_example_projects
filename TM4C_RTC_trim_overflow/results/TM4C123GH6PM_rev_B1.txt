
Running on Device Class=0x5 Major Revision=0x1 Minor Revision=0x1
DID0=0x18050101 DID1=0x10a1606c

Starting RTC time rollover tests
================================

1) Test match for sub-seconds of zero:
- Without HIB#01 workaround; since an undefined RTC trim is in use
- Without HIB#02 workaround
This will result in no match interrupt and multiple discontinuities
due to the sub-seconds appearing to update non-monotonically.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x0 HIBRTCT=0x2040
HIB#02 workaround : No  Reset RTC time on first match interrupt : No
Num RTC match interrupts=0
Num RTC time discontinuities=41
   RTC time discontinuity (0x2c0,0x1abb) -> (0x2c0,0x1abf)
   RTC time discontinuity (0x2c0,0x1abf) -> (0x2c0,0x1abc)
   RTC time discontinuity (0x2c0,0x2b55) -> (0x2c0,0x2b57)
   RTC time discontinuity (0x2c0,0x2b57) -> (0x2c0,0x2b56)
   RTC time discontinuity (0x2c0,0x38bd) -> (0x2c0,0x38bf)
   RTC time discontinuity (0x2c0,0x38bf) -> (0x2c0,0x38be)
   RTC time discontinuity (0x2c0,0x423f) -> (0x2c0,0x427f)
   RTC time discontinuity (0x2c0,0x427f) -> (0x2c0,0x4240)
   RTC time discontinuity (0x2c0,0x4a8b) -> (0x2c0,0x4a8d)
   RTC time discontinuity (0x2c0,0x4a8d) -> (0x2c0,0x4a8c)
   ...

2) Test match for sub-seconds of maximum:
- Without HIB#01 workaround; since an undefined RTC trim is in use
- Without HIB#02 workaround
This will result in one match interrupt and multiple discontinuities
due to the sub-seconds appearing to update non-monotonically.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x7fff HIBRTCT=0x2040
HIB#02 workaround : No  Reset RTC time on first match interrupt : No
Num RTC match interrupts=1
   RTC match interrupt around times (0x2c1,0x7ffb) (0x2c1,0x7ffc) (0x2c1,0x7ffd) (0x2c1,0x7ffe) (0x2c1,0x7fff) *interrupt* (0x2c2,0x0)
Num RTC time discontinuities=35
   RTC time discontinuity (0x2c0,0xbed) -> (0x2c0,0xbef)
   RTC time discontinuity (0x2c0,0xbef) -> (0x2c0,0xbee)
   RTC time discontinuity (0x2c0,0x1965) -> (0x2c0,0x1967)
   RTC time discontinuity (0x2c0,0x1967) -> (0x2c0,0x1966)
   RTC time discontinuity (0x2c0,0x2055) -> (0x2c0,0x2057)
   RTC time discontinuity (0x2c0,0x2057) -> (0x2c0,0x2056)
   RTC time discontinuity (0x2c0,0x21c9) -> (0x2c0,0x21cb)
   RTC time discontinuity (0x2c0,0x21cb) -> (0x2c0,0x21ca)
   RTC time discontinuity (0x2c0,0x3abf) -> (0x2c0,0x3acc)
   RTC time discontinuity (0x2c0,0x3acc) -> (0x2c0,0x3ac0)
   ...

3) Test match for sub-seconds of zero:
- Without HIB#01 workaround; since an undefined RTC trim is in use
- With HIB#02 workaround
This will result in no match interrupt and one discontinuity when the
least 6 significant bits of the RTC seconds change from 0 to 1.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x0 HIBRTCT=0x2040
HIB#02 workaround : Yes  Reset RTC time on first match interrupt : No
Num RTC match interrupts=0
Num RTC time discontinuities=1
   RTC time discontinuity (0x2c0,0x7fff) -> (0x2c1,0x5fbf)

4) Test match for sub-seconds of zero:
- With HIB#01 workaround; since the RTC trim has been set to no adjustment
- With HIB#02 workaround
This will result in one interrupt and no discontinuities.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x0 HIBRTCT=0x7fff
HIB#02 workaround : Yes  Reset RTC time on first match interrupt : No
Num RTC match interrupts=1
   RTC match interrupt around times (0x2c0,0x7ffc) (0x2c0,0x7ffd) (0x2c0,0x7ffe) (0x2c0,0x7fff) (0x2c1,0x0) *interrupt* (0x2c1,0x1)
Num RTC time discontinuities=0

5) Test match for sub-seconds of 0x7FFC, along with a trim value of 0x8002.
The trim value causes the sub-seconds to go backwards, such that only match interrupt occurs.
Since a RTC trim is applied which causes the time to go backwards two discontinuities are reported.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x7ffc HIBRTCT=0x8002
HIB#02 workaround : Yes  Reset RTC time on first match interrupt : No
Num RTC match interrupts=1
   RTC match interrupt around times (0x2c1,0x7ff8) (0x2c1,0x7ff9) (0x2c1,0x7ffa) (0x2c1,0x7ffb) (0x2c1,0x7ffc) *interrupt* (0x2c1,0x7ffd)
Num RTC time discontinuities=2
   RTC time discontinuity (0x2c0,0x7fff) -> (0x2c1,0x7ffd)
   RTC time discontinuity (0x2c1,0x7fff) -> (0x2c1,0x0)

6) Test match for sub-seconds of 0x7FFD, along with a trim value of 0x8002.
The trim value causes the sub-seconds to go backwards, such that according to the datasheet the
the match interrupt should occur twice. However, only one match interrupt occurs.
Since a RTC trim is applied which causes the time to go backwards two discontinuities are reported.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x7ffd HIBRTCT=0x8002
HIB#02 workaround : Yes  Reset RTC time on first match interrupt : No
Num RTC match interrupts=1
   RTC match interrupt around times (0x2c1,0x7ff9) (0x2c1,0x7ffa) (0x2c1,0x7ffb) (0x2c1,0x7ffc) (0x2c1,0x7ffd) *interrupt* (0x2c1,0x7ffe)
Num RTC time discontinuities=2
   RTC time discontinuity (0x2c0,0x7fff) -> (0x2c1,0x7ffd)
   RTC time discontinuity (0x2c1,0x7fff) -> (0x2c1,0x0)

7) Same match value and RTC trim as previous test, but the RTC is reset to the initial value
RTC match interrupt occurs, which leads to a total of two match interrupts.
This shows the test function can report more than one RTC match interrupt per call.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x7ffd HIBRTCT=0x8002
HIB#02 workaround : Yes  Reset RTC time on first match interrupt : Yes
Num RTC match interrupts=2
   RTC match interrupt around times (0x2c1,0x7ff9) (0x2c1,0x7ffa) (0x2c1,0x7ffb) (0x2c1,0x7ffc) (0x2c1,0x7ffd) *interrupt* (0x2c0,0x0)
   RTC match interrupt around times (0x2c1,0x7ff9) (0x2c1,0x7ffa) (0x2c1,0x7ffb) (0x2c1,0x7ffc) (0x2c1,0x7ffd) *interrupt* (0x2c1,0x7ffe)
Num RTC time discontinuities=5
   RTC time discontinuity (0x2c0,0x7fff) -> (0x2c1,0x7ffd)
   RTC time discontinuity (0x2c1,0x7fff) -> (0x2c1,0x0)
   RTC time discontinuity (0x2c1,0x7ffd) -> (0x2c0,0x0)
   RTC time discontinuity (0x2c0,0x7fff) -> (0x2c1,0x7ffd)
   RTC time discontinuity (0x2c1,0x7fff) -> (0x2c1,0x0)

8) Test match for sub-seconds of 0x2, along with a trim value of 0x7FFC.
The trim value causes the sub-seconds to advance, such that no RTC match interrupt occurs.
Since a RTC trim is applied which makes the time go forwards one discontinuity is reported.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x2 HIBRTCT=0x7ffc
HIB#02 workaround : Yes  Reset RTC time on first match interrupt : No
Num RTC match interrupts=0
Num RTC time discontinuities=1
   RTC time discontinuity (0x2c0,0x7fff) -> (0x2c1,0x3)

9) Test match for sub-seconds of 0x3, along with a trim value of 0x7FFC.
The trim value causes the sub-seconds to advance, such that a RTC match interrupt is seen.
Since a RTC trim is applied which makes the time go forwards one discontinuity is reported.
Tested RTC with HIBRTCM0=0x2c1 HIBRTCSS=0x3 HIBRTCT=0x7ffc
HIB#02 workaround : Yes  Reset RTC time on first match interrupt : No
Num RTC match interrupts=1
   RTC match interrupt around times (0x2c0,0x7ffc) (0x2c0,0x7ffd) (0x2c0,0x7ffe) (0x2c0,0x7fff) (0x2c1,0x3) *interrupt* (0x2c1,0x4)
Num RTC time discontinuities=1
   RTC time discontinuity (0x2c0,0x7fff) -> (0x2c1,0x3)

Tests complete

